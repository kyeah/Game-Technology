CS354R - Assignment 2 (Single Player Engine and Game)
=================================

RUNNING
=================================
1. Consult README for instructions on building.
2. run the RacquetApp executable (./RacquetApp)

CONTROLS
=================================
Racquetball Mode:
WASD - X-Z Movement
Shift - Hold to increase movement speed
Mouse - Paddle Rotation (Horizontal Mouse Control)
Left Click / Spacebar - Swing
Right Click - Push

Pong Mode:
WASD - X-Z Movement
Shift - Hold to increase movement speed
Mouse - X-Y Paddle Movement
Left Click / Spacebar - Push

Keyboard Options:
P - Toggle Pong Mode
G - Toggle Gravity, for dishonest CHEATERS (Down -> Off -> Up)
R - Restart

FINAL IMPLEMENTATION OVERVIEW
=================================
Bullet Integration: The final implementation of bullet still contains problems with object clipping, but occurrences have been reduced to playable levels.

Look and Texturing: We found the indie arcade style to be a good fit for the type of game we created, and added particle/material effects to make it more interesting.

SDL / Sound Effects: Works well enough, although we are limited to playing one clip at a time.

User Input: Feels good, but limitations in our implementation of Bullet Physics prevents the paddle from being swung too quickly.

Camera Control: Simple and unobtrusive; we created a semi-transparent paddle material to make it easier to see the ball.

Heads-up display and Scoring: Visual cues help users know when they have scored.

Game Design: We experimented with different options, such as 3D movement for scoring planes, but decided that it was easier and more fun to play when we kept it simple.

FILES
=================================
BaseApplication.h/cpp
RacquetApp.h/cpp (Main application files, Game Logic)
Physics.h/cpp, OgreMotionState.h/cpp, Collisions.h (Bullet integration files)
SDL.h, SDL_mixer.h, Sounds.cpp/h (SDL/Mixer integration files)
GameObject.h, RacquetObject.h (General Game Object Definitions)
Racquet.cpp, Ball.cpp, Plane.cpp, Dude.cpp (Specific Game Object Definitions)